<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hqyj.dao.StudentMapper">
  <resultMap type="com.hqyj.entity.Student" id="BaseResultMap">
  	<id column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="student_num" jdbcType="INTEGER" property="studentNum" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_gender" jdbcType="VARCHAR" property="studentGender" />
    <result column="student_age" jdbcType="INTEGER" property="studentAge" />
    <result column="student_tel" jdbcType="VARCHAR" property="studentTel" />
    <result column="student_email" jdbcType="VARCHAR" property="studentEmail" />
    <result column="student_departclass" jdbcType="VARCHAR" property="studentDepartClass" />
    <result column="fk_user_id" jdbcType="INTEGER" property="fkUserId" />
    <result column="fk_class_id" jdbcType="INTEGER" property="fkClassId" />
  </resultMap>
  
  <resultMap type="com.hqyj.entity.Student" id="findAllStudentScore">
		<id column="student_id" jdbcType="INTEGER" property="studentId" />
	    <result column="student_num" jdbcType="INTEGER" property="studentNum" />
		<result column="student_name" jdbcType="VARCHAR" property="studentName" />
		<result column="student_gender" jdbcType="VARCHAR" property="studentGender" />
		<result column="student_age" jdbcType="INTEGER" property="studentAge" />
		<result column="student_tel" jdbcType="VARCHAR" property="studentTel" />
		<result column="student_email" jdbcType="VARCHAR" property="studentEmail" />
		<result column="student_departclass" jdbcType="VARCHAR" property="studentDepartClass" />
		<result column="fk_user_id" jdbcType="INTEGER" property="fkUserId" />
		<result column="fk_class_id" jdbcType="INTEGER" property="fkClassId" />
		<result column="fk_class_name" jdbcType="INTEGER" property="fkClassName" />
    	<collection property="score" javaType="Score">
		    <id column="score_id" jdbcType="INTEGER" property="scoreId" />
			<result column="score_number" jdbcType="INTEGER" property="scoreNunber" />
			<result column="score_ispass" jdbcType="INTEGER" property="isPass" />
			<result column="fk_student_id" jdbcType="INTEGER" property="fkStudentId" />
    	</collection>
	</resultMap>
  
  <sql id="Base_Column_List">
    student_id, student_num, student_name, student_gender, student_age, student_tel, 
    student_email, fk_user_id, fk_division_id
  </sql>
  <!-- 增加学生信息 -->
  <insert id="insertStudent" parameterType="com.hqyj.entity.Student">
  	INSERT INTO t_student(student_id,student_num,student_name,student_gender,student_age,student_tel,student_email,student_departclass,fk_user_id)
	VALUES(null,#{studentNum},#{studentName},#{studentGender},#{studentAge},#{studentTel},#{studentEmail},#{studentDepartClass},#{fkUserId}) 
  </insert>
  
  <!-- 查询学生信息 --> 
  <select id="queryStudentAll" resultMap="BaseResultMap">
  	select *from t_student
  </select>
  
  <!-- 查询全部学生的成绩 -->
  <select id="queryStudentScoreAll" resultMap="findAllStudentScore">
  	SELECT *FROM t_student s,t_class c,t_score sc
	WHERE t_classid = s.fk_class_id AND sc.fk_student_id = s.student_id
  </select>
  <!-- 根据id查询 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	SELECT *FROM t_student WHERE student_id=#{studentId}
  </select>
  <!-- 删除学生信息 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_student
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>
  
  <update id="updateByPrimaryKey" parameterType="com.hqyj.entity.Student">
    update t_student
    set student_num = #{studentNum,jdbcType=INTEGER},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_gender = #{studentGender,jdbcType=VARCHAR},
      student_age = #{studentAge,jdbcType=INTEGER},
      student_tel = #{studentTel,jdbcType=VARCHAR},
      student_email = #{studentEmail,jdbcType=VARCHAR},
      student_departclass = #{studentDepartClass,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
</mapper>